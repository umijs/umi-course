<!doctype lake><h1>快速上手</h1><h2 id="cbb060fd">环境准备</h2><p><br /></p><p><span><span style="background-color: #FAFAFA;">在开始之前，请确保你的开发环境已经安装了 Node.js，</span></span><span>umi 需要</span><span><span style="background-color: #FAFAFA;"> Node.js 8.10 版本以上：</span></span></p><ul><li><p>检测 Node.js 版本，可以在<span><span style="background-color: #FAFAFA;">终端/控制台窗口中运行 </span></span><code>node -v</code><span><span style="background-color: #FAFAFA;"> </span></span>命令。</p></li><li><p><span><span style="background-color: #FAFAFA;">要想安装 </span></span>Node.js，可参考上一小节内容。</p></li></ul><p><br /></p><card type="block" name="codeblock" value="data:%7B%22mode%22%3A%22bash%22%2C%22code%22%3A%22%24%20node%20-v%5Cnv8.11.3%22%7D"></card><p><br /></p><blockquote><p>注意：这里的版本号只要大于 8.10 就可以了， 8.9 和以下的版本可能会出现一些意料之外的问题。</p></blockquote><p><br /></p><p><br /></p><h2 id="200fcc1d">第一步 安装Umi</h2><p><br /></p><p>后续需要使用 umi 来创建页面 <code>umi g</code> ，并执行多种任务，比如测试 <code>umi test</code> 、打包 <code>umi build</code> 和开发 <code>umi dev</code> 等。为了能直接在命令行中运行这些命令，你需要<span>打开终端/控制台窗口，输入以下命令来</span>全局安装 umi ：</p><p><br /></p><card type="block" name="codeblock" value="data:%7B%22mode%22%3A%22bash%22%2C%22code%22%3A%22%24%20npm%20install%20-g%20umi%22%7D"></card><p><br /></p><p>推荐使用 <a href="https://yarnpkg.com/" target="_blank">yarn</a> 代替  npm 来安装 umi ， yarn 会针对部分场景做一些缓存以节省时间，你可以输入以下命令来全局安装 yarn ：</p><p><br /></p><card type="block" name="codeblock" value="data:%7B%22mode%22%3A%22bash%22%2C%22code%22%3A%22%24%20npm%20install%20-g%20yarn%22%7D"></card><p><br /></p><p>命令行执行结束后，判断 yarn 是否安装成功：</p><p><br /></p><card type="block" name="codeblock" value="data:%7B%22mode%22%3A%22bash%22%2C%22code%22%3A%22%24%20yarn%20-v%5Cn1.9.4%22%7D"></card><p><br /></p><p>然后使用 yarn 安装 umi ：</p><p><br /></p><card type="block" name="codeblock" value="data:%7B%22mode%22%3A%22bash%22%2C%22code%22%3A%22%24%20yarn%20global%20add%20umi%22%7D"></card><p><br /></p><p>命令行执行结束后，判断 umi 是否安装成功：</p><p><br /></p><card type="block" name="codeblock" value="data:%7B%22mode%22%3A%22bash%22%2C%22code%22%3A%22%24%20umi%20-v%5Cn2.2.4%22%7D"></card><p><br /></p><blockquote><p><strong>注意</strong>：更多的时候，我们用到的是项目工作空间的 umi，而不是全局的 umi，由于不同版本的 umi 存在一定差异，你需要留意。</p></blockquote><p><br /></p><p><br /></p><h2 id="45cb1615">第二步 新建一个简单的 umi 项目</h2><p><br /></p><p>在你的工作空间或者任意目录新建一个名为 <em>my-app</em> 的文件夹：</p><p><br /></p><card type="block" name="codeblock" value="data:%7B%22mode%22%3A%22bash%22%2C%22code%22%3A%22%24%20mkdir%20my-app%22%7D"></card><p><br /></p><p>在 VS Code 点击<span>「文件 - 打开文件夹</span><span>」</span>打开 <em>my-app</em>，然后打开终端工具。</p><p><br /></p><p><card type="inline" name="image" value="data:%7B%22src%22%3A%22https%3A%2F%2Fcdn.nlark.com%2Fyuque%2F0%2F2018%2Fpng%2F123174%2F1543933441350-65287fe7-f392-44ae-828d-5dc287f7ef06.png%22%2C%22originWidth%22%3A1536%2C%22originHeight%22%3A818%2C%22display%22%3A%22inline%22%2C%22align%22%3A%22left%22%2C%22linkTarget%22%3A%22_blank%22%2C%22width%22%3A747%2C%22height%22%3A398%7D"></card></p><p><cursor /><br /></p><blockquote><p><strong>注意</strong>：后续提到的执行命令都是在<span>「终端</span><span>」</span>执行，如果你选择使用其他命令行工具，那么执行命令前你需要切换到当前项目的目录。</p></blockquote><p><br /></p><p>通过 <code>umi g page</code> 来创建页面：</p><p><br /></p><card type="block" name="codeblock" value="data:%7B%22mode%22%3A%22bash%22%2C%22code%22%3A%22%24%20umi%20g%20page%20home%5Cn%20%20%20create%20pages%2Fhome.js%5Cn%20%20%20create%20pages%2Fhome.css%5Cn%E2%9C%94%20%20success%22%7D"></card><p><br /></p><p>你也可以手动新建 <code>home.js</code> 文件来创建页面。</p><p><br /></p><p><card type="inline" name="image" value="data:%7B%22src%22%3A%22https%3A%2F%2Fcdn.nlark.com%2Fyuque%2F0%2F2018%2Fpng%2F123174%2F1543934058311-07251279-5102-4ca9-abb2-be5ebd203966.png%22%2C%22originWidth%22%3A1418%2C%22originHeight%22%3A488%2C%22display%22%3A%22inline%22%2C%22align%22%3A%22left%22%2C%22linkTarget%22%3A%22_blank%22%2C%22width%22%3A747%2C%22height%22%3A257%7D"></card></p><blockquote><p>如果你的输入提示和我的不同，你可以通过安装 VS Code 插件 <a href="https://marketplace.visualstudio.com/items?itemName=xiaohuoni.oni-javascript-snippet" target="_blank"><span>Oni JavaScript Snippet</span></a><span> </span>来获得相同的功能。</p></blockquote><p><br /></p><p>现在，你应该已经得到了以下的目录结构：</p><p><br /></p><card type="block" name="codeblock" value="data:%7B%22mode%22%3A%22bash%22%2C%22code%22%3A%22%E2%94%94%E2%94%80%E2%94%80%20pages%5Cn%20%20%20%20%E2%94%9C%E2%94%80%E2%94%80%20home.css%5Cn%20%20%20%20%E2%94%9C%E2%94%80%E2%94%80%20home.js%5Cn%20%20%20%20%E2%94%94%E2%94%80%E2%94%80%20list.js%22%7D"></card><p><br /></p><blockquote><p>这里的 pages 目录是页面所在的目录，umi 约定默认情况下 pages 下所有的 js 文件即路由</p></blockquote><p><br /></p><p><br /></p><h2 id="44cf2d8a">第三步 启动开发服务器</h2><p><br /></p><card type="block" name="codeblock" value="data:%7B%22mode%22%3A%22bash%22%2C%22code%22%3A%22%24%20umi%20dev%5Cn%5CnCompiling%5Cn%E2%9C%94%20success%20webpack%20compiled%20in%203s%2049ms%5Cn%20DONE%20%20Compiled%20successfully%20in%203056ms%20%20%20%20%20%20%20%20%20%20%20%2022%3A37%3A57%5Cn%5Cn%5Cn%20%20App%20running%20at%3A%5Cn%20%20-%20Local%3A%20%20%20http%3A%2F%2Flocalhost%3A8000%2F%20(copied%20to%20clipboard)%5Cn%20%20-%20Network%3A%20http%3A%2F%2F192.168.199.195%3A8000%2F%22%7D"></card><p><br /></p><p>umi 在启动完成后将<span><span style="background-color: #FAFAFA;">自动打开浏览器，并访问 </span></span>http://localhost:8000/ ，你将看到以下页面：</p><p><br /></p><p><card type="inline" name="image" value="data:%7B%22src%22%3A%22https%3A%2F%2Fcdn.nlark.com%2Fyuque%2F0%2F2018%2Fpng%2F123174%2F1543934454320-ef9f8cbc-fd4d-4a9f-8db0-76b5da7b9f38.png%22%2C%22originWidth%22%3A1244%2C%22originHeight%22%3A642%2C%22display%22%3A%22inline%22%2C%22align%22%3A%22left%22%2C%22linkTarget%22%3A%22_blank%22%2C%22width%22%3A747%2C%22height%22%3A386%7D"></card></p><p><br /></p><p>这是开发环境下的 404 页面，因为目前并没有在 pages 下面创建 index.js 。不过没有关系，我们可以通过访问 http://localhost:8000/home 来访问我们创建的 home 页面：</p><p><br /></p><p><card type="inline" name="image" value="data:%7B%22src%22%3A%22https%3A%2F%2Fcdn.nlark.com%2Fyuque%2F0%2F2018%2Fpng%2F123174%2F1543934554533-51f989a6-48bb-40bd-b341-19e8513eb429.png%22%2C%22originWidth%22%3A798%2C%22originHeight%22%3A190%2C%22display%22%3A%22inline%22%2C%22align%22%3A%22left%22%2C%22linkTarget%22%3A%22_blank%22%2C%22width%22%3A281%2C%22height%22%3A67%7D"></card></p><p><br /></p><p><br /></p><h2 id="e1284cad">第四步 编辑页面</h2><p>1. 打开 pages/home.js</p><p>2. 编辑文件</p><p><br /></p><card type="block" name="codeblock" value="data:%7B%22mode%22%3A%22diff%22%2C%22code%22%3A%22%3Cdiv%20className%3D%7Bstyles.normal%7D%3E%5Cn-%20%3Ch1%3EPage%20home%3C%2Fh1%3E%5Cn%2B%20%3Ch1%3EWelcome%20to%20Umi%3C%2Fh1%3E%5Cn%3C%2Fdiv%3E%22%7D"></card><p><br /></p><p>3. 保存文件，回到浏览器查看修改后的页面：</p><p><br /></p><p><card type="inline" name="image" value="data:%7B%22src%22%3A%22https%3A%2F%2Fcdn.nlark.com%2Fyuque%2F0%2F2018%2Fpng%2F123174%2F1543935010397-0dfbf3ad-a518-4b16-8c40-79c72432ec44.png%22%2C%22originWidth%22%3A802%2C%22originHeight%22%3A244%2C%22display%22%3A%22inline%22%2C%22align%22%3A%22left%22%2C%22linkTarget%22%3A%22_blank%22%2C%22width%22%3A747%2C%22height%22%3A227%7D"></card></p><blockquote><p>umi 默认开启热更新功能，修改文件并保存之后就能直接在页面中看到变化。</p></blockquote><p><br /></p><p><br /></p><h2 id="c6069ba7">代码回顾</h2><p><br /></p><p>你可以在 <a href="https://github.com/xiaohuoni/umi-course/tree/master/my-app" target="_blank">my-app</a> 中查看本节的全部代码。</p><p><br /></p><p><a href="https://github.com/xiaohuoni/umi-course/blob/master/doc/04.md" target="_blank">在 GitHub 上编辑此页</a></p><p><br /></p><p><br /></p>